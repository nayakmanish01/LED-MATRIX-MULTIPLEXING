
5LED_blink_program.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000186  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000186  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  000001b5  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008f0  00000000  00000000  000001e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000572  00000000  00000000  00000ad3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000277  00000000  00000000  00001045  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000012bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000196  00000000  00000000  000012e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000168  00000000  00000000  00001476  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000015de  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000104  00000104  00000178  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000015f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.main    00000082  0000006c  0000006c  000000e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__dummy_fini 00000002  0000010c  0000010c  00000180  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__dummy_funcs_on_exit 00000002  0000010e  0000010e  00000182  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__dummy_simulator_exit 00000002  00000110  00000110  00000184  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.exit    00000016  000000ee  000000ee  00000162  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text._Exit   00000004  00000108  00000108  0000017c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
   8:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
   c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  10:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  14:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  18:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  1c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  20:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  24:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  28:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  2c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  30:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  34:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  38:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  3c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  40:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  44:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  48:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  4c:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>
  50:	0c 94 82 00 	jmp	0x104	; 0x104 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <_etext>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <exit>

00000068 <_exit>:
  68:	f8 94       	cli

0000006a <__stop_program>:
  6a:	ff cf       	rjmp	.-2      	; 0x6a <__stop_program>

Disassembly of section .text:

00000104 <__bad_interrupt>:
 104:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

0000006c <main>:

#include <xc.h>
#include<util/delay.h>

int main(void)
{   DDRB=0b00011111;
  6c:	8f e1       	ldi	r24, 0x1F	; 31
  6e:	87 bb       	out	0x17, r24	; 23
	PORTB=0X00;
  70:	18 ba       	out	0x18, r1	; 24
    while(1)
    {
		PORTB |=0b00000001;
  72:	88 b3       	in	r24, 0x18	; 24
  74:	81 60       	ori	r24, 0x01	; 1
  76:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  78:	2f e3       	ldi	r18, 0x3F	; 63
  7a:	8d e0       	ldi	r24, 0x0D	; 13
  7c:	93 e0       	ldi	r25, 0x03	; 3
  7e:	21 50       	subi	r18, 0x01	; 1
  80:	80 40       	sbci	r24, 0x00	; 0
  82:	90 40       	sbci	r25, 0x00	; 0
  84:	e1 f7       	brne	.-8      	; 0x7e <main+0x12>
  86:	00 c0       	rjmp	.+0      	; 0x88 <main+0x1c>
  88:	00 00       	nop
		_delay_ms(1000);
        PORTB |=0b00000010;
  8a:	88 b3       	in	r24, 0x18	; 24
  8c:	82 60       	ori	r24, 0x02	; 2
  8e:	88 bb       	out	0x18, r24	; 24
  90:	2f e3       	ldi	r18, 0x3F	; 63
  92:	8d e0       	ldi	r24, 0x0D	; 13
  94:	93 e0       	ldi	r25, 0x03	; 3
  96:	21 50       	subi	r18, 0x01	; 1
  98:	80 40       	sbci	r24, 0x00	; 0
  9a:	90 40       	sbci	r25, 0x00	; 0
  9c:	e1 f7       	brne	.-8      	; 0x96 <main+0x2a>
  9e:	00 c0       	rjmp	.+0      	; 0xa0 <main+0x34>
  a0:	00 00       	nop
        _delay_ms(1000);
        PORTB |=0b00000100;
  a2:	88 b3       	in	r24, 0x18	; 24
  a4:	84 60       	ori	r24, 0x04	; 4
  a6:	88 bb       	out	0x18, r24	; 24
  a8:	2f e3       	ldi	r18, 0x3F	; 63
  aa:	8d e0       	ldi	r24, 0x0D	; 13
  ac:	93 e0       	ldi	r25, 0x03	; 3
  ae:	21 50       	subi	r18, 0x01	; 1
  b0:	80 40       	sbci	r24, 0x00	; 0
  b2:	90 40       	sbci	r25, 0x00	; 0
  b4:	e1 f7       	brne	.-8      	; 0xae <main+0x42>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <main+0x4c>
  b8:	00 00       	nop
        _delay_ms(1000);
        PORTB |=0b00001000;
  ba:	88 b3       	in	r24, 0x18	; 24
  bc:	88 60       	ori	r24, 0x08	; 8
  be:	88 bb       	out	0x18, r24	; 24
  c0:	2f e3       	ldi	r18, 0x3F	; 63
  c2:	8d e0       	ldi	r24, 0x0D	; 13
  c4:	93 e0       	ldi	r25, 0x03	; 3
  c6:	21 50       	subi	r18, 0x01	; 1
  c8:	80 40       	sbci	r24, 0x00	; 0
  ca:	90 40       	sbci	r25, 0x00	; 0
  cc:	e1 f7       	brne	.-8      	; 0xc6 <main+0x5a>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <main+0x64>
  d0:	00 00       	nop
        _delay_ms(1000);
        PORTB |=0b00010000;
  d2:	88 b3       	in	r24, 0x18	; 24
  d4:	80 61       	ori	r24, 0x10	; 16
  d6:	88 bb       	out	0x18, r24	; 24
  d8:	2f e3       	ldi	r18, 0x3F	; 63
  da:	8d e0       	ldi	r24, 0x0D	; 13
  dc:	93 e0       	ldi	r25, 0x03	; 3
  de:	21 50       	subi	r18, 0x01	; 1
  e0:	80 40       	sbci	r24, 0x00	; 0
  e2:	90 40       	sbci	r25, 0x00	; 0
  e4:	e1 f7       	brne	.-8      	; 0xde <main+0x72>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <main+0x7c>
  e8:	00 00       	nop
        _delay_ms(1000);
        PORTB=0b00000000;     
  ea:	18 ba       	out	0x18, r1	; 24
  ec:	c2 cf       	rjmp	.-124    	; 0x72 <main+0x6>

Disassembly of section .text.__dummy_fini:

0000010c <_fini>:
 10c:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

0000010e <__funcs_on_exit>:
 10e:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000110 <__simulator_exit>:
 110:	08 95       	ret

Disassembly of section .text.exit:

000000ee <exit>:
  ee:	ec 01       	movw	r28, r24
  f0:	0e 94 87 00 	call	0x10e	; 0x10e <__funcs_on_exit>
  f4:	0e 94 86 00 	call	0x10c	; 0x10c <_fini>
  f8:	ce 01       	movw	r24, r28
  fa:	0e 94 88 00 	call	0x110	; 0x110 <__simulator_exit>
  fe:	ce 01       	movw	r24, r28
 100:	0e 94 84 00 	call	0x108	; 0x108 <_Exit>

Disassembly of section .text._Exit:

00000108 <_Exit>:
 108:	0e 94 34 00 	call	0x68	; 0x68 <_exit>
